@model IEnumerable<NAA.Data.Bean.ApplicationBEAN>

@{
    ViewBag.Title = "Your applications";
}

<h2>Your applications</h2>

<p>
    @Html.ActionLink("Find course", "Index", "Course", new { id = ViewBag.applicantId }, null)
</p>

@if (Model == null)
{
    <p>No applications</p>
}
@if (Model != null)
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.University)
            </th>
            <th>
                @Html.DisplayName("Course name")
            </th>
            <th>
                @Html.DisplayName("Personal statement")
            </th>
            <th>
                @Html.DisplayName("Teacher contact details")
            </th>
            <th>
                @Html.DisplayName("Teacher reference")
            </th>
            <th>
                @Html.DisplayName("University offer")
            </th>
            <th>
                @Html.DisplayName("Enrolled")
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.University)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CourseName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PersonalStatement)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TeacherContactDetails)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TeacherReference)
                </td>
                <td>
                    @switch (item.UniversityOffer)
                    {
                        case "P":
                            @Html.DisplayName("Pending")
                            break;
                        case "R":
                            @Html.DisplayName("Reject")
                            break;
                        case "U":
                            @Html.DisplayName("Unconditional")
                            break;
                        case "C":
                            @Html.DisplayName("Conditional")
                            break;
                        default:
                            break;
                    }
                </td>
                <td>
                    @if (item.Firm.HasValue)
                    {
                        @*@Html.DisplayFor(modelItem => item.Firm.Value)*@
                        if (item.Firm.Value)
                        {
                            @Html.DisplayName("Enrolled")
                        }
                        else
                        {
                            @Html.DisplayName("Dismissed")
                        }
                    }
                    else
                    {
                        if (!ViewBag.IsEnrolled)
                        {
                            if (item.UniversityOffer == ((char)NAA.Data.Enum.ApplicationState.Unconditional).ToString())
                            {
                                @Html.ActionLink("Enroll me", "EnrollApplication", new { id = item.Id, applicantId = ViewBag.applicantId }) @Html.DisplayName(" | ")
                            }
                            if (item.UniversityOffer == ((char)NAA.Data.Enum.ApplicationState.Unconditional).ToString() || item.UniversityOffer == ((char)NAA.Data.Enum.ApplicationState.Conditional).ToString())
                            {
                                @Html.ActionLink("Reject", "RejectApplication", new { id = item.Id, applicantId = ViewBag.applicantId })
                            }
                            if (!(item.UniversityOffer == ((char)NAA.Data.Enum.ApplicationState.Unconditional).ToString() || item.UniversityOffer == ((char)NAA.Data.Enum.ApplicationState.Conditional).ToString()))
                            {
                                @Html.DisplayName("-")
                            }
                        }
                        else
                        {
                            @Html.DisplayName("-")
                        }
                    }
                </td>
                <td>
                    @if (item.UniversityOffer == ((char)NAA.Data.Enum.ApplicationState.Pending).ToString() && !ViewBag.IsEnrolled)
                    {
                        @Html.ActionLink("Edit", "EditApplication", new { id = item.Id, applicantId = ViewBag.applicantId }) @Html.DisplayName(" | ");
                    }
                    @if (item.UniversityOffer == ((char)NAA.Data.Enum.ApplicationState.Pending).ToString() && !ViewBag.IsEnrolled)
                    {
                        @Html.ActionLink("Delete", "DeleteApplication", new { id = item.Id, applicantId = ViewBag.applicantId })
                    }
                </td>
            </tr>
        }

    </table>
}